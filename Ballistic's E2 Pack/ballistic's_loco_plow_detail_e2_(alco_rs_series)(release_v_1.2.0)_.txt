@name Ballistic's Loco Plow Detail E2 (ALCo RS Series)(Release V 1.2.0) 
#Because people are lazy
@inputs 
@outputs 
@persist 
@trigger 
#------ Plow Stuffs
Color = vec(255) #Color of plow
Color2 = vec(255) #Color of coupler cut bar grabs
Color3 = vec(30) #Color of ditch lights (if you have them)
Material = "models/proppertextures/enamel_black" #Material of plow
Material2 = "models/proppertextures/acrylic" #Material of coupler cut bar 
Material3 = "models/proppertextures/acrylic" #Material of ditch lights (if you have them)

MuDoors = 1 #0 = Closed, 1 = Open, 2 = None
StreamlinedDoors = 1 #0 = None, 1 = Closed, 2 = Open

CutBar = 1# The Type of Cut Bar You Want to Have. Even Numers Only
Ditchlights = 0 #0 = No Ditchlights, 1 = Ditchlights
DitchlightType = 1 #0 = Squared Ditchlights 1 = Round Ditchlights 2 = Round Small Ditchlights
DitchlightX = 0 #Ditchlight Pos X
DitchlightY = 15 #Ditchlight Pos Y
DitchlightZ = 3  #Ditchlight Pos Z

PlowType = 1 #0 = Strike Plate, 1 = Foot Board, 2 = Plow
Coupler = 0 #0 = No Coupler, 1 = Fake Real Coupler

Hose = 3 #The Ammount of hoses ya want
Mu = 0 #0 = Yes I want MU's 1 = Nah fam no MU for you 
Kinky = 1 #0 = none kinky 1 = maxamum kink

#[
Credits:
Ballistic Studios (duh)
Calensk Kerman (Beta Tester)
Red Stone [Kenny] (Beta Tester)
Laz (Hoses)
Anyone999991 (Cut Bar)
Grove (Plow, Foot Boards, Ditchlights)
Titus - (The Big Him, Pr Manager Thing?)
]#


#[ 

DO NOT MESS WITH ANYTHING BEYOND THIS POINT

Unless your Kiwi Master or Laz then it's cool

]#

if(first() | duped()){
if(PlowType <= 1) {MuDoors = 0}
else{MuDoors = MuDoors}
if(MuDoors == 0) {B = 2}
if(MuDoors == 1) {B = 1}
if(MuDoors == 2) {B = 1}
if(Mu == 1) {B = 3}
if(Ditchlights == 1) {D = 255}
else{D = 0}
Mat = Material
Mat2 = Material2
Mat3 = Material3
C = -1
if(PlowType == 0) {E = 255}
else{E = 0}
if(PlowType == 1) {F = 255}
else{F = 0}
if(PlowType == 2) {G = 255}
else{G = 0}
if(Coupler == 1) {H = 255}
else{H = 0}
CB = CutBar
if(Hose == 3) {I = 3}
if(Hose == 4) {I = 4}
if(Hose > 4) {I = 0}
if(Hose < 3) {I = 0}
DT = DitchlightType



A = 0
holoCreate(A)
holoParent(A, entity())
holoAng(A, entity():toWorld(ang(0,90,-90)) )
holoModel(A, "models/rika/part/pilot/footboards_alco_rs_early.mdl")
holoEntity(A):setSubMaterial(1,Mat)
holoPos(A,entity():toWorld(vec(43,0,4)))
holoScale(A, vec(1,1.2,1))
holoColor(A,Color)
holoAlpha(A , F)
A++
holoCreate(A)
holoParent(A, entity())
holoAng(A, entity():toWorld(ang(0,90,0)) )
holoModel(A, "models/sprops/rectangles/size_2/rect_12x72x3.mdl")
holoMaterial(A,Mat)
holoPos(A,entity():toWorld(vec(45,0,-1)))
holoScale(A, vec(1,1.2,1))
holoColor(A,Color)
holoAlpha(A,E)
A++
holoCreate(A)
holoParent(A, entity())
holoAng(A, entity():toWorld(ang(0,90,90)) )
holoModel(A, "models/sprops/geometry/qhex_24.mdl")
holoMaterial(A,Mat)
holoPos(A,entity():toWorld(vec(45,41.98,-1)))
holoScale(A, vec(1,1,1.386))
holoColor(A,Color)
holoAlpha(A,E)
A++
holoCreate(A)
holoParent(A, entity())
holoAng(A, entity():toWorld(ang(0,-90,-90)) )
holoModel(A, "models/sprops/geometry/qhex_24.mdl")
holoMaterial(A,Mat)
holoPos(A,entity():toWorld(vec(45,-41.98,-1)))
holoScale(A, vec(1,1,1.386))
holoColor(A,Color)
holoAlpha(A,E)
A++
holoCreate(A)
holoParent(A, entity())
holoAng(A, entity():toWorld(ang(-90,0,0)) )
holoModel(A, "models/gsgtrainprops/trains/propper/snowplows/plow_medium_multipurpose.mdl")
holoMaterial(A,Mat)
holoPos(A,entity():toWorld(vec(57,0,1)))
holoScale(A, vec(1.0))
holoColor(A,Color)
holoBodygroup(A,1,MuDoors)
holoBodygroup(A,2,StreamlinedDoors)
holoAlpha(A , G)

A++
holoCreate(A)
holoParent(A, entity())
holoAng(A, entity():toWorld(ang(-90,0,0)) )
holoModel(A, "models/gsgtrainprops/parts/couplers/type_e_coupler.mdl")
holoMaterial(A,"models/proppertextures/enamel_black")
holoPos(A,entity():toWorld(vec(30,0.1,14)))
holoScale(A, vec(1))
holoColor(A,vec(255) )
holoAlpha(A , H)
A++
holoCreate(A)
holoParent(A, entity())
holoAng(A, entity():toWorld(ang(-90,0,0)) )
holoModel(A, "models/lazpack/detail/mu_"+ I +"hose_right.mdl")
holoPos(A,entity():toWorld(vec(10,-32,2)))
holoScale(A, vec(1))
holoColor(A,vec(255) )
holoBodygroup(A,1,B)
A++
holoCreate(A)
holoParent(A, entity())
holoAng(A, entity():toWorld(ang(-90,0,0)) )
holoModel(A, "models/lazpack/detail/mu_"+ I +"hose_left.mdl")
holoPos(A,entity():toWorld(vec(10,32,2)))
holoScale(A, vec(1))
holoColor(A,vec(255) )
holoBodygroup(A,1,B)
if(Kinky == 0){A++ 
A++
holoCreate(A)
holoParent(A, entity())
holoAng(A, entity():toWorld(ang(-90,0,0)) )
holoModel(A, "models/lazpack/detail/brakehose.mdl")
holoPos(A,entity():toWorld(vec(15,19,6)))
holoScale(A, vec(1))
holoColor(A,vec(255) )
holoEntity(A):setSubMaterial(1,Mat) 
}
if(Kinky == 1){A++ 
A++
holoCreate(A)
holoParent(A, entity())
holoAng(A, entity():toWorld(ang(-90,0,0)) )
holoModel(A, "models/lazpack/detail/brakehose_offset.mdl")
holoPos(A,entity():toWorld(vec(15,19,6)))
holoScale(A, vec(1))
holoColor(A,vec(255) )
holoEntity(A):setSubMaterial(1,Mat) 
}    
A++ 
holoCreate(A)
holoPos(A,entity():toWorld(vec(5+C,0,0)))
holoParent(A, entity())
holoModel(A, "models/anytrains/props/detail/cutbar.mdl")
holoAng(A, entity():toWorld(ang(90,180,0)) )
holoMaterial(A, (""))
holoColor(A,Color2)
holoParent(2,1)
holoEntity(A):setSubMaterial(5,Mat2) 
holoBodygroup(A,2,CB)
holoScale(A,vec(1,0.9,1))
A++ 
holoCreate(A)
holoPos(A,entity():toWorld(vec(-9+DitchlightZ,-23-DitchlightX,11-DitchlightY)))
holoParent(A, entity())
holoModel(A, "models/sprops/rectangles_superthin/size_2/rect_12x12.mdl")
holoAng(A, entity():toWorld(ang(0,90,0)) )
holoScale(A, vec(1))
holoMaterial(A, (Mat3))
holoColor(A,Color3)
holoParent(2,1)
holoAlpha(A,D)
A++ 
holoCreate(A)
holoPos(A,entity():toWorld(vec(-9+DitchlightZ,23+DitchlightX,11-DitchlightY)))
holoParent(A, entity())
holoModel(A, "models/sprops/rectangles_superthin/size_2/rect_12x12.mdl")
holoAng(A, entity():toWorld(ang(0,90,0)) )
holoScale(A, vec(1))
holoMaterial(A, (Mat3))
holoColor(A,Color3)
holoParent(2,1)
holoAlpha(A,D)
if(DT == 0){A++ 
holoCreate(A)
holoPos(A,entity():toWorld(vec(-10+DitchlightZ,23+DitchlightX,11-DitchlightY)))
holoParent(A, entity())
holoModel(A, "models/gsgtrainprops/parts/headlights/headlight_singlebeam_plate.mdl")
holoAng(A, entity():toWorld(ang(0,0,0)) )
holoScale(A, vec(1))
holoEntity(A):setSubMaterial(1,Mat3)
holoColor(A,Color3)
holoParent(2,1)
holoAlpha(A,D)
A++ 
holoCreate(A)
holoPos(A,entity():toWorld(vec(-10+DitchlightZ,-23-DitchlightX,11-DitchlightY)))
holoParent(A, entity())
holoModel(A, "models/gsgtrainprops/parts/headlights/headlight_singlebeam_plate.mdl")
holoAng(A, entity():toWorld(ang(0,0,0)) )
holoScale(A, vec(1))
holoEntity(A):setSubMaterial(1,Mat3)
holoColor(A,Color3)
holoParent(2,1)
holoAlpha(A,D)
}
if(DT == 1){A++ 
holoCreate(A)
holoPos(A,entity():toWorld(vec(-10+DitchlightZ,23+DitchlightX,11-DitchlightY)))
holoParent(A, entity())
holoModel(A, "models/gsgtrainprops/parts/headlights/headlight_singlebeam_large.mdl")
holoAng(A, entity():toWorld(ang(0,0,0)) )
holoScale(A, vec(1))
holoEntity(A):setSubMaterial(1,Mat3)
holoColor(A,Color3)
holoParent(2,1)
holoAlpha(A,D)
A++ 
holoCreate(A)
holoPos(A,entity():toWorld(vec(-10+DitchlightZ,-23-DitchlightX,11-DitchlightY)))
holoParent(A, entity())
holoModel(A, "models/gsgtrainprops/parts/headlights/headlight_singlebeam_large.mdl")
holoAng(A, entity():toWorld(ang(0,0,0)) )
holoScale(A, vec(1))
holoEntity(A):setSubMaterial(1,Mat3)
holoColor(A,Color3)
holoParent(2,1)
holoAlpha(A,D)
}
if(DT == 2){A++ 
holoCreate(A)
holoPos(A,entity():toWorld(vec(-10+DitchlightZ,23+DitchlightX,11-DitchlightY)))
holoParent(A, entity())
holoModel(A, "models/gsgtrainprops/parts/headlights/headlight_singlebeam_mars_sb-2000.mdl")
holoAng(A, entity():toWorld(ang(0,0,0)) )
holoScale(A, vec(1))
holoEntity(A):setSubMaterial(1,Mat3)
holoColor(A,Color3)
holoParent(2,1)
holoAlpha(A,D)
A++ 
holoCreate(A)
holoPos(A,entity():toWorld(vec(-10+DitchlightZ,-23-DitchlightX,11-DitchlightY)))
holoParent(A, entity())
holoModel(A, "models/gsgtrainprops/parts/headlights/headlight_singlebeam_mars_sb-2000.mdl")
holoAng(A, entity():toWorld(ang(0,0,0)) )
holoScale(A, vec(1))
holoEntity(A):setSubMaterial(1,Mat3)
holoColor(A,Color3)
holoParent(2,1)
holoAlpha(A,D)
}
}

#If you really want bottom ditchlights yell at me more
